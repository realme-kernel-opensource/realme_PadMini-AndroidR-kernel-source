LOCAL_PATH:= $(call my-dir)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := pvrsrvkm.ko
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/lib/modules
#LOCAL_STRIP_MODULE := keep_symbols
LOCAL_SRC_FILES := $(LOCAL_MODULE)

### workaround for 64bit kernel and 32 bit user space, to avoid the target strip issue
ifeq ($(TARGET_KERNEL_ARCH), arm64)
ifeq ($(TARGET_ARCH), arm)
LOCAL_STRIP_MODULE := false
endif
endif

ifeq ($(TARGET_KERNEL_ARCH), arm64)
TARGET_PRIMARY_ARCH := target_aarch64
else
TARGET_PRIMARY_ARCH := target_armv7-a
endif

include $(BUILD_PREBUILT)

$(warning LOCAL_MODULE: $(LOCAL_MODULE))
$(warning LOCAL_PATH: $(LOCAL_PATH))
$(warning PLATFORM_VERSION: $(PLATFORM_VERSION))
$(warning PLATFORM_VERSION_CODENAME: $(PLATFORM_VERSION_CODENAME))
$(warning MALI_PLATFORM_NAME: $(MALI_PLATFORM_NAME))

ifeq ($(TARGET_BUILD_VARIANT),user)
  BUILD_ := release
  export PVRSRV_NEED_PVR_DPF := 1
else
#  BUILD_ := debug
  BUILD_ := release
  export PVRSRV_NEED_PVR_DPF := 1
endif

BUILD_ := release
RGX_NOHW_ := 0

$(warning TARGET_ARCH: $(TARGET_ARCH))
$(warning KERNEL_CROSS_COMPILE:$(KERNEL_CROSS_COMPILE))



RGX_NOHW_ := 0

$(warning CROSS_COMPILE_:$(CROSS_COMPILE_))

$(LOCAL_PATH)/pvrsrvkm.ko : $(TARGET_PREBUILT_KERNEL)
	$(MAKE) -C $(shell dirname $@) ARCH=$(TARGET_KERNEL_ARCH) CROSS_COMPILE=$(KERNEL_CROSS_COMPILE) BUILD=$(BUILD_) PLATFORM_VERSION=$(PLATFORM_VERSION) PLATFORM_VERSION_CODENAME=$(PLATFORM_VERSION_CODENAME) RGX_NOHW=$(RGX_NOHW_) BOARD_NAME=$(MALI_PLATFORM_NAME) KDIR=$(PRODUCT_OUT_ABSOLUTE)/obj/KERNEL clean
	$(MAKE) -C $(shell dirname $@) ARCH=$(TARGET_KERNEL_ARCH) CROSS_COMPILE=$(KERNEL_CROSS_COMPILE) BUILD=$(BUILD_) PLATFORM_VERSION=$(PLATFORM_VERSION) PLATFORM_VERSION_CODENAME=$(PLATFORM_VERSION_CODENAME)  RGX_NOHW=$(RGX_NOHW_) BOARD_NAME=$(MALI_PLATFORM_NAME) KDIR=$(PRODUCT_OUT_ABSOLUTE)/obj/KERNEL
	cp -r $(PRODUCT_OUT)/$(TARGET_PRIMARY_ARCH)/kbuild/pvrsrvkm.ko $(shell dirname $@)
